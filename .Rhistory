install.packages("knitr")
help(rnorm)
x0 = matrix(rnorm(1000*10),ncol=10,byrow=TRUE)
head(x0)
x0[1]
x0[1,]
x0[1,2]
x0.s = sample(x0,50)
head(x0.s)
x0.s
help(sample)
x0.test = matrix(rnorm(1000*10),ncol=10,byrow=TRUE)
x1.test = matrix(rnorm(1000*10),ncol=10,byrow=TRUE)
x1.test[,1:5] = x1.test[,1:5] + 1
x.test = rbind(x0.test,x1.test)
y0 = rep(0,1000)
y1 = rep(1,1000)
classes = c(y0,y1)
test.data = data.frame(x.test,y=as.factor(classes))
head(test.data)
s = sample(test.data,50)
s = sample(test.data,10)
s
source('~/Documents/ENS/M1/Statistical Learning/SVM.R')
source('~/Documents/ENS/M1/Statistical Learning/SVM.R')
source('~/Documents/ENS/M1/Statistical Learning/SVM.R')
ls()
errors
mean(errors)
source('~/Documents/ENS/M1/Statistical Learning/SVM.R')
mean(errors)
sum(fit != test.data$y)
fit
mean(errors)
source('~/Documents/ENS/M1/Statistical Learning/SVM.R')
mean(errors)
rep(c(0,1),c(50,50))
source('~/Documents/ENS/M1/Statistical Learning/SVM.R')
mean(errors)
source('~/Documents/ENS/M1/Statistical Learning/SVM.R')
mean(errors)
require(ISLR)
names(Smarket)
summary(Smarket)
?Smarket
pairs(Smarket,col=Smarket$Direction)
pairs
glm.fit=glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume,
summary(glm.fit)
;
glm.fit=glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume,
data=Smarket,family=binomial)
summary(glm.fit)
source('~/Documents/ENS/M1/Statistical Learning/SVM.R')
source('~/Documents/ENS/M1/Statistical Learning/SVM.R')
source('~/Documents/ENS/M1/Statistical Learning/SVM.R')
source('~/Documents/ENS/M1/Statistical Learning/SVM.R')
source('~/Documents/ENS/M1/Statistical Learning/SVM.R')
mean(errors)
fit
summary(glm.fit)
fit[1:5]
mean(fit)
fit[1:5,]
head(fit)
fit.pred = ifelse(fit>0,1,0)
fit.pred
fit.pred = ifelse(fit>1,1,0)
fit.pred
fit.pred = ifelse(fit>0.5,1,0)
fit.pred
source('~/Documents/ENS/M1/Statistical Learning/SVM.R')
mean(errors)
getwd()
setwd("Projects/nobelprizes/")
setwd("Projects/nobelprizes/")
getwd()
df = read.csv("data/nobelprizes.csv")
head(df)
df$category
for(c in df){print c}
print head(df)
print(3)
for(c in df){print(c)}
c
?subset
med=subset(df,category==medecine)
med=subset(df,category=="medecine")
med=subset(df,df$category==medecine)
med=subset(df,as.factor(df$category==medecine))
med=subset(df,as.factor(category)==medecine)
med=subset(df,category==as.factor(medecine))
med=subset(df,select=id:category)
med
head(med)
help(set)
df$category
med=subset(df,category=medicine)
med=subset(df,category==medicine)
med=subset(df,category=="medicine")
head(med)
med$category
?write.csv
write.csv(med,"data/medicines.csv")
write.csv(med,"data/medicine.csv")
df = read.csv("data/medicinedomain.csv")
summary(df)
df = read.table("data/medicinedomain.csv")
df[2]
df[2,]
?read.csv
df = read.csv("data/medicinedomain.csv",sep="\t")
df[1,]
summary(df)
df$domain
library(ggplot2)
plot(df$category)
plot(df$domain)
ggplot(df$domain)
ggplot2.plot(df$domain)
